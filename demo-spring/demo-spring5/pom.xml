<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>demo-spring</artifactId>
        <groupId>com.hundsun</groupId>
        <version>1.0.0.0-SNAPSHOT</version>
    </parent>

    <artifactId>demo-spring5</artifactId>
    <packaging>war</packaging>

    <properties>
        <build.finalName>demo-spring5</build.finalName>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
    </properties>

    <dependencies>

        <!-- 内部 -->
        <dependency>
            <groupId>com.hundsun</groupId>
            <artifactId>demo-java</artifactId>
            <version>1.0.0.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>com.hundsun</groupId>
            <artifactId>demo-common-core</artifactId>
            <version>1.0.0.0-SNAPSHOT</version>
        </dependency>

        <!-- Spring官方 -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
        </dependency>
        <!-- 这个在 Spring Data 项目下-->
        <!-- 可以看到 Spring 官方提供了 jedis 或者是 lettuce 两种客户端的支持 -->
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-redis</artifactId>
        </dependency>

        <!-- JDBC的一些驱动包 -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        <dependency>
            <groupId>com.oracle.database.jdbc</groupId>
            <artifactId>ojdbc8</artifactId>
        </dependency>
        <dependency>
            <groupId>com.oracle.database.nls</groupId>
            <artifactId>orai18n</artifactId>
        </dependency>

        <!-- Mybatis -->
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis-spring</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper</artifactId>
        </dependency>

        <!-- JPA的持久层规范 -->
        <dependency>
            <groupId>jakarta.persistence</groupId>
            <artifactId>jakarta.persistence-api</artifactId>
        </dependency>
        <!-- Java Servlet是Java企业平台的基础web规范。 -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
        </dependency>

    </dependencies>

    <profiles>
        <profile>
            <id>dev</id>
            <!--默认激活状态-->
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <finalName>${build.finalName}</finalName>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <configuration>
                            <!--使得打出的包是可执行的-->
                            <executable>true</executable>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <!--
                                    build-image:Package an application into a OCI image using a buildpack.
                                    build-info:Generate a file based the content of the current .build-info.propertiesMavenProject
                                    help:Display help information on spring-boot-maven-plugin. Call to display parameter details.mvn spring-boot:help -Ddetail=true -Dgoal=<goal-name>
                                    * repackage:Repackage existing JAR and WAR archives so that they can be executed from the command line using . With can also be used simply to package a JAR with nested dependencies (and no main class, so not executable).java -jarlayout=NONE
                                    run:Run an application in place.
                                    start:Start a spring application. Contrary to the goal, this does not block and allows other goals to operate on the application. This goal is typically used in integration test scenario where the application is started before a test suite and stopped after.run
                                    stop:Stop an application that has been started by the "start" goal. Typically invoked once a test suite has completed.
                                    -->
                                    <goal>repackage</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>pro</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <finalName>${build.finalName}</finalName>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <configuration>
                            <!--移除properties文件，pro把配置文件放jar包外进行配置-->
                            <excludes>
                                <exclude>
                                    **/*.properties
                                </exclude>
                            </excludes>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <configuration>
                            <!--使打的包是可执行的-->
                            <executable>true</executable>
                            <mainClass>com.hundsun.demo.spring.SpringDemoApplication</mainClass>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>repackage</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>