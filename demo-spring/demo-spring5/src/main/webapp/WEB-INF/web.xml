<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
    <!--Tomcat 控制台如果乱码可以在 Tomcat的启动参数中设置 -Dfile.encoding=utf-8, 保持编码统一以解决乱码问题-->

    <!--
    这里的web.xml供Servlet容器访问, Servlet容器在加载和启动的时候JavaWeb应用的时候会读取web.xml配置文件
    主要配置信息:
    1.Servlet的定义
    2.Servlet的初始化参数
    3.Servlet以及JSP的映射
    4.安全域配置参数
    5.welcome文件清单
    6.资源引用
    7.环境变量的定义
    -->

    <!--可以考虑使用这种配置方式来配置多个配置文件-->
    <!--    <context-param>-->
    <!--        <param-name>contextConfigLocation</param-name>-->
    <!--        <param-value>**.xml,**.xml</param-value>-->
    <!--    </context-param>-->

    <!--
    它将为整个Web应用程序加载顶层的WebApplicationContext
    加载的WebApplicationContext的默认配置文件路径为/WEB-INF/applicationContext.xml
    后续可以使用org.springframework.web.context.support.WebApplicationContextUtils来获取我们绑定的WebApplicationContext
    WebApplicationContextUtils.getWebApplicationContext(getServletContext());
    -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!--为Servlet类定义名字-->
    <servlet>
        <servlet-name>controller</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>/WEB-INF/controller-servlet.xml</param-value>
        </init-param>
        <load-on-startup>2</load-on-startup>
    </servlet>

    <!--为Servlet映射一个URL-->
    <servlet-mapping>
        <servlet-name>controller</servlet-name>
        <url-pattern>*.do</url-pattern>
    </servlet-mapping>

    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>

</web-app>