package com.hundsun.demo.java.jdk.network;

/**
 * @projectName: study-demo
 * @package: com.hundsun.demo.java.jdk.network
 * @className: IONote
 * @description:
 * @author: hl
 * @createDate: 2023/7/26 22:53
 */

public class IONote {
    /*
     * 1. todo-2023-07-26 为什么两台计算机通信一定要用 socket?
     * 首先对于单个计算机的进程可以使用进程标识符(pid), 但是在互联网的环境下, 这样的使用方式已经行不通了, 比如不同操作系统之间可能使用不同格式的进程标识符
     * 解决这个问题最终的方案是在运输层使用协议端口号, 也就是端口(port), 只要把所传送的报文交到目的主机的某个合适的端口, 剩下的工作交给 TCP/UDP 就行了
     * 于是对于 TCP 协议来说, 两台通过 TCP 协议连接的计算机, 他们通过两个套接字 socket 进行通信, 也就是 ip:port 来确定一个 socket
     *
     * 接着是系统调用和应用编程接口
     * 系统调用 - 可以理解成一般程序设计中的函数调用, 只是系统调用把控制权传递给了操作系统. 而这种由应用进程的控制权和操作系统的控制权进行转换的一个接口就是系统调用接口
     * 由于应用程序在使用系统调用之前需要编写一些程序, 所以这种系统调用接口又被称为应用编程接口, 而目前只有几种可以供应用程序使用的 TCP/IP 的应用编程接口
     * 其中最著名的就是 套接字接口
     *
     * 网络环境中两台计算机需要进行网络通信, 其实可以看作一台计算机要读取另一台计算机的数据, 或者是要把数据写入另一台计算机
     * 当应用程序需要进行网络通信的时候, 必须首先发出一个 socket 系统调用, 请求操作系统为其创建一个 套接字
     * 这个调用的实际结果就是请求操作系统把网络通信需要用到的一些资源分配给应用进程, 操作系统把这些资源总和叫做一个套接字描述符, 然后把这个 fd 返回给应用进程
     *
     * 2. todo-2023-07-26 五种主要的 IO 模型
     * */
}
