<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.hulei.commom.core.mapper.BiguserMapper">
    <resultMap id="BaseResultMap" type="org.hulei.commom.core.model.pojo.Biguser">
        <!--@mbg.generated-->
        <!--@Table biguser-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="ssn" jdbcType="VARCHAR" property="ssn"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber"/>
        <result column="plate" jdbcType="VARCHAR" property="plate"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="building_number" jdbcType="VARCHAR" property="buildingNumber"/>
        <result column="country" jdbcType="VARCHAR" property="country"/>
        <result column="birth" jdbcType="VARCHAR" property="birth"/>
        <result column="company" jdbcType="VARCHAR" property="company"/>
        <result column="job" jdbcType="VARCHAR" property="job"/>
        <result column="card_number" jdbcType="VARCHAR" property="cardNumber"/>
        <result column="city" jdbcType="VARCHAR" property="city"/>
        <result column="week" jdbcType="VARCHAR" property="week"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="paragraphs" jdbcType="LONGVARCHAR" property="paragraphs"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id,
        user_name,
        ssn,
        `name`,
        phone_number,
        plate,
        address,
        building_number,
        country,
        birth,
        company,
        job,
        card_number,
        city,
        week,
        email,
        title,
        paragraphs,
        create_time,
        update_time
    </sql>

    <!-- insert,update,delete三个语句差不多的参数
    id:唯一标识符
    parameterType:入参类型,可选参数,mybatis可以自行推断
    flushCache:清空本地和二级缓存,对于insert,update,delete默认ture
    timeout:同select,在指定时间内没有响应直接返回
    statementType:同select
    useGeneratedKeys:使用jdbc提供的getGeneratedKeys方法来取出由数据库内部生成的主键,默认false
    keyProperty: todo
    keyColumn:
    databaseID:
     -->
    <insert id="batchInsert">
        insert into biguser(user_name, ssn, name, phone_number, plate, address, building_number, country, birth,
                            company, job, card_number, city, week, email, title, paragraphs)
        values
        <!--
        collection:指定要遍历的集合,如果我们的入参是List,那么这里的可选参数就是collection和list,如果是Map,就可以是map.keys,map.entry
        open,close:标明foreach标签的前后应该加上的前缀,后缀, 可选参数
        index:当遍历的对象是List或者Set的时候,index表示当前元素的下标,如果是Map类型,index通常表示key, 可选参数
        item:定义集合中每个元素的别名,可以通过别名来引用集合内的元素,必填参数
        separator:每次foreach的分隔符
        -->
        <foreach collection="list" item="item" separator=",">
            <!--批量插入,每一行都要用括号括起来,所以这里要加括号-->
            (#{item.userName}, #{item.ssn}, #{item.name}, #{item.phoneNumber}, #{item.plate}, #{item.address},
             #{item.buildingNumber}, #{item.country},
             #{item.birth}, #{item.company}, #{item.job}, #{item.cardNumber}, #{item.city}, #{item.week},
             #{item.email}, #{item.title},
             #{item.paragraphs})
        </foreach>
    </insert>


    <select id="fetchSize1Tags" resultType="org.hulei.commom.core.model.pojo.Biguser">
        select
        <include refid="Base_Column_List">
        </include>
        from biguser
    </select>


    <select id="fetchSize100Tags" resultType="org.hulei.commom.core.model.pojo.Biguser">
        select *
        from biguser
    </select>
</mapper>