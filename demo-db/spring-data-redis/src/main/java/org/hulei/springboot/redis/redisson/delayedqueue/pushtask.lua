---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by User.
--- DateTime: 2025/1/13 10:47
---

-- 在有序队列内按照分数排序 从分数0到当前的时间毫秒数 取出前100的元素
local expiredValues = redis.call('zrangebyscore', KEYS[2], 0, ARGV[1], 'limit', 0, ARGV[2]);
if #expiredValues > 0 then
    -- 循环操作这些元素
    for i, v in ipairs(expiredValues) do
        -- 解包真实的元素
        local randomId, value = struct.unpack('Bc0Lc0', v);
        -- 右插法插入 list
        redis.call('rpush', KEYS[1], value);
        -- 从 redisson_delay_queue开头的redisson自带的延迟队列记录list中移除
        redis.call('lrem', KEYS[3], 1, v);
    end ;
    -- 从 KEYS[2] 中删除所有已过期的值。
    redis.call('zrem', KEYS[2], unpack(expiredValues));
end ;

-- 获取 KEYS[2] 中第一个元素及其分数，并检查其是否存在。如果存在，则返回分数。
local v = redis.call('zrange', KEYS[2], 0, 0, 'WITHSCORES');
if v[1] ~= nil then
    return v[2];
end
return nil;



--        key               Arrays.asList(getRawName(), timeoutSetName, queueName),
--        value              System.currentTimeMillis(), 100);