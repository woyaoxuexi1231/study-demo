<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.hulei</groupId>
        <artifactId>springboot-vue</artifactId>
        <version>1.0.0.4-SNAPSHOT</version>
    </parent>

    <artifactId>server</artifactId>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <build.finalName>springbootvue-server</build.finalName>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>
    </dependencies>


    <profiles>

        <profile>
            <id>dev</id>
            <!--默认激活状态-->
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <finalName>${build.finalName}</finalName>
                <plugins>
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <configuration>
                            <filesets>
                                <fileset>
                                    <directory>src/main/resources/public</directory>
                                </fileset>
                            </filesets>
                        </configuration>
                    </plugin>
                    <plugin>
                        <!--
                        使用 2.2.6.RELEASE 版本 spring-boot-maven-plugin 进行打包的时候我发现 jsp 即使被打进包里也访问不了
                        使用 1.4.2.RELEASE 版本的也不行
                        打出来的包启动会报错
                        Failed to scan [jar:file:/C:/Project/study-demo/demo-spring/demo-springboot/target/demo-springboot.jar!/BOOT-INF/lib/spring-webmvc-5.2.7.RELEASE.jar!/] from classloader hierarchy
                        Caused by: java.lang.IllegalStateException: Not a file URL
                        Failed to scan [jar:file:/C:/Project/study-demo/demo-spring/demo-springboot/target/demo-springboot.jar!/BOOT-INF/lib/jstl-1.2.jar!/] from classloader hierarchy
                        Caused by: java.lang.IllegalStateException: Not a file URL
                        这两个日志是 WARN 级别的, 不知道是什么原因
                        -->
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <configuration>
                            <!--使得打出的包是可执行的-->
                            <executable>true</executable>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <!--
                                    build-image:Package an application into a OCI image using a buildpack.
                                    build-info:Generate a file based the content of the current .build-info.propertiesMavenProject
                                    help:Display help information on spring-boot-maven-plugin. Call to display parameter details.mvn spring-boot:help -Ddetail=true -Dgoal=<goal-name>
                                    * repackage:Repackage existing JAR and WAR archives so that they can be executed from the command line using . With can also be used simply to package a JAR with nested dependencies (and no main class, so not executable).java -jarlayout=NONE
                                    run:Run an application in place.
                                    start:Start a spring application. Contrary to the goal, this does not block and allows other goals to operate on the application. This goal is typically used in integration test scenario where the application is started before a test suite and stopped after.run
                                    stop:Stop an application that has been started by the "start" goal. Typically invoked once a test suite has completed.
                                    -->
                                    <goal>repackage</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <includes>
                            <include>**/**</include>
                        </includes>
                    </resource>
                    <resource>
                        <directory>src/main/webapp</directory>
                        <includes>
                            <include>**/**</include>
                        </includes>
                        <filtering>false</filtering>
                        <!--                        <targetPath>META-INF/resource</targetPath>-->
                    </resource>
                </resources>
            </build>
        </profile>


        <profile>
            <id>pro</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <finalName>${build.finalName}</finalName>
                <resources>
                    <resource>
                        <filtering>true</filtering>
                        <directory>src/main/resources</directory>
                        <excludes>
                            <exclude>
                                **/*.properties
                            </exclude>
                        </excludes>
                    </resource>
                </resources>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <configuration>
                            <!--使打的包是可执行的-->
                            <executable>true</executable>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>repackage</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>


        <profile>
            <id>ui</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.hulei</groupId>
                    <artifactId>vue2-cli</artifactId>
                    <version>1.0.0.4-SNAPSHOT</version>
                </dependency>
                <dependency>
                    <groupId>org.hulei</groupId>
                    <artifactId>vue2-webpack</artifactId>
                    <version>1.0.0.4-SNAPSHOT</version>
                </dependency>
                <dependency>
                    <groupId>org.hulei</groupId>
                    <artifactId>vue3-vite</artifactId>
                    <version>1.0.0.4-SNAPSHOT</version>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <configuration>
                            <filesets>
                                <fileset>
                                    <directory>src/main/resources/public</directory>
                                </fileset>
                            </filesets>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy Vue.js frontend content</id>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <phase>generate-resources</phase>
                                <configuration>
                                    <outputDirectory>src/main/resources/public</outputDirectory>
                                    <!-- true表示覆盖目标文件中已经存在的文件 -->
                                    <overwrite>true</overwrite>
                                    <resources>
                                        <resource>
                                            <!-- <directory>${project.parent.basedir}/vue2-cli/dist</directory> -->
                                            <!-- <directory>${project.parent.basedir}/vue2-webpack/dist</directory> -->
                                            <directory>${project.parent.basedir}/vue3-vite/dist</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>