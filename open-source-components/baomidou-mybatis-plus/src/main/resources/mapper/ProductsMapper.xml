<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.hulei.springboot.mybatisplus.mapper.ProductsMapper">
    <resultMap id="BaseResultMap" type="org.hulei.entity.mybatisplus.domain.Products">
        <!--@mbg.generated-->
        <!--@Table products-->
        <id column="product_code" jdbcType="VARCHAR" property="productCode"/>
        <result column="product_name" jdbcType="VARCHAR" property="productName"/>
        <result column="product_line" jdbcType="VARCHAR" property="productLine"/>
        <result column="product_scale" jdbcType="VARCHAR" property="productScale"/>
        <result column="product_vendor" jdbcType="VARCHAR" property="productVendor"/>
        <result column="product_description" jdbcType="LONGVARCHAR" property="productDescription"/>
        <result column="quantity_in_stock" jdbcType="SMALLINT" property="quantityInStock"/>
        <result column="buy_price" jdbcType="DECIMAL" property="buyPrice"/>
        <result column="msrp" jdbcType="DECIMAL" property="msrp"/>
    </resultMap>

    <resultMap id="productFullInfoMap" type="org.hulei.springboot.mybatisplus.model.ProductFullInfo" extends="BaseResultMap">
        <!-- 对于 association 和 collection 标签,都可以不用写 select 子查询,只要一次查询的sql的字段没有重复,并且可以唯一映射上就行-->
        <!-- association主要用于处理一对一关系的关联查询,这种映射关系主要因为关联的对象在我们查询的对象的内部,他做为一个单独的属性出现,通过此标签,把对应的结果都给映射到这个属性内部 -->
        <!-- mybatis如何加载这种关联关系呢?
         1. 嵌套查询,也就是此标签中的select,此标签需要指定一个子查询,通过配置column和select子句来达到目的
            这种方式存在一个非常大的问题就是,对于大型数据集非常不友好,对于每一条关联关系都要进行一次查询,这将非常浪费IO性能
         2. 关联的嵌套结果,也就是这里采用的方式,所有的结果(包括关联对象的结果)都在一个查询语句中返回,通过属性名来映射到不同的地方
         -->
        <association
                property="productlineInfo"
                javaType="org.hulei.entity.mybatisplus.domain.ProductLines"
                columnPrefix="pl_"
                resultMap="org.hulei.springboot.mybatisplus.mapper.ProductLinesMapper.BaseResultMap"
        />
    </resultMap>

    <select id="selectProductFullInfo" resultMap="productFullInfoMap">
        select p.product_code,
               p.product_name,
               p.product_line,
               p.product_scale,
               p.product_vendor,
               p.product_description,
               p.quantity_in_stock,
               p.buy_price,
               p.msrp,
               pl.product_line     as pl_productLine,
               pl.text_description as pl_textDescription,
               pl.html_description as pl_htmlDescription,
               pl.image           as pl_image
        from products p
                 inner join product_lines pl on p.product_line = pl.product_line
    </select>
</mapper>