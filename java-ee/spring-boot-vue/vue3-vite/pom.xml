<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.hulei</groupId>
        <artifactId>spring-boot-vue</artifactId>
        <version>1.0.0.4-SNAPSHOT</version>
    </parent>

    <artifactId>vue3-vite</artifactId>

    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <profiles>
        <profile>
            <id>ui</id>
            <activation>
                <!-- 这个部分配置了该profile在默认情况下是激活的，即使没有明确指定profile id，这个profile也会被激活。 -->
                <activeByDefault>true</activeByDefault>
            </activation>
            <!-- build用于配置构建相关的信息 -->
            <build>
                <plugins>
                    <!-- 这个插件在clean阶段会使用 -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-clean-plugin</artifactId>
                        <configuration>
                            <filesets>
                                <fileset>
                                    <directory>dist</directory>
                                </fileset>
                                <!-- 这里不清理node_modules文件夹，依赖一般不会变化 -->
                                <!--<fileset> -->
                                <!--    <directory>node_modules</directory> -->
                                <!--</fileset> -->
                            </filesets>
                        </configuration>
                    </plugin>

                    <plugin>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <version>1.15.1</version>
                        <configuration>
                            <!-- <installDirectory>target</installDirectory> -->
                            <!-- <workingDirectory>src/main/frontend</workingDirectory> -->

                            <!-- 配置node和npm版本 -->
                            <!--
                            这个插件的github文档明确指出了这个插件不支持使用本地的node进行构建
                            原文:Notice: This plugin does not support already installed Node or npm versions. Use the exec-maven-plugin instead.
                            vue2-cli这个项目就是使用 exec-maven-plugin 配置本地 node 进行打包
                            -->
                            <nodeVersion>v18.20.4</nodeVersion>
                            <npmVersion>10.7.0</npmVersion>

                            <!-- 配置淘宝镜像，国内拉取太慢了 -->
                            <nodeDownloadRoot>http://nodejs.org/dist/</nodeDownloadRoot>
                            <npmDownloadRoot>http://registry.npmjs.org/npm/-/</npmDownloadRoot>
                        </configuration>
                        <executions>
                            <execution>
                                <!-- install-node-and-npm，安装 Node.js 和 npm -->
                                <id>install node and npm</id>
                                <goals>
                                    <goal>install-node-and-npm</goal>
                                </goals>
                                <!-- optional: default phase is "generate-resources" -->
                                <!-- 这个操作默认就在generate-resources这个极端,所以在compile的时候会安装node和npm -->
                            </execution>
                            <execution>
                                <id>npm install</id>
                                <!-- npm，即运行 npm 命令。 -->
                                <goals>
                                    <goal>npm</goal>
                                </goals>
                                <!-- optional: default phase is "generate-resources" -->
                                <!-- 指定在 generate-resources 阶段执行。 -->
                                <configuration>
                                    <!-- 运行 npm install 命令以安装项目依赖。 -->
                                    <arguments>install</arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>npm build</id>
                                <goals>
                                    <goal>npm</goal>
                                </goals>
                                <configuration>
                                    <!-- 运行 npm run build 命令以构建和压缩静态文件。 -->
                                    <arguments>run build</arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>