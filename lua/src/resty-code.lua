---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by User.
--- DateTime: 2024/12/26 15:42
---


local resty_string = require "resty.string"
local openssl_cipher = require "resty.openssl.cipher"
local openssl_base64 = require "resty.openssl.base64"

-- 创建加密/解密器
local function create_cipher(charset, allKey, sepKey, mode)
    local c = openssl_cipher.new("des-ede3-cbc")
    local iv = sepKey:sub(1, 8) -- 初始向量
    local key = allKey:sub(1, 24) -- 使用前24个字符作为密钥
    c:init(mode == 1, key, iv) -- mode == 1 表示加密，0 表示解密
    return c
end

-- 解密方法
local function decode(encryptText, charset, allKey, sepKey)
    local c = create_cipher(charset, allKey, sepKey, 0)
    local decryptData = c:final(openssl_base64.decode(encryptText))
    return resty_string.to_hex(decryptData)
end

-- 示例使用
local encryptText = "YOUR_ENCRYPTED_TEXT"
local charset = "UTF-8"
local allKey = "123456789012345678901234" -- 24字节密钥
local sepKey = "12345678" -- 8字节初始向量

local decryptedText = decode(encryptText, charset, allKey, sepKey)
print("Decrypted text: ", decryptedText)
